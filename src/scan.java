import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.io.File; 
import java.io.IOException;
import java.util.Date; 

import jxl.*; 
import jxl.read.biff.BiffException;
import jxl.write.WritableWorkbook;




public class scan {

	/**
	 * @param args
	 * @throws SQLException 
	 * @throws IOException 
	 * @throws BiffException 
	 */
	public static void main(String[] args) throws SQLException, IOException, BiffException {
		Connection c ;

			 c = DriverManager.getConnection("jdbc:hsqldb:mem:gardedb", "SA", "");
		
		Workbook data;
		
			data = Workbook.getWorkbook(new File("data.xls"));
		
		 WritableWorkbook workbook = Workbook.createWorkbook(new File("planning_garde.xls"));
		 setup(c,data);
		 
		 
		  


	}
	
	public static void  setup(Connection c, Workbook data) throws SQLException	{
		Sheet sheet = data.getSheet(4);
		 boolean hasint = false;
		 Cell cur;
		 for (int i = 1; i < sheet.getRows(); i++){
			 cur = sheet.getCell(2,i);
			 if (!hasint){
				 hasint = cur.getCellFormat() != null;
			 }
		 }
		Statement mystatement = c.createStatement();
		 ResultSet rs;
		 rs = mystatement.executeQuery("CREATE TABLE SERVICES(NOM VARCHAR(20), NUMERO INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1)PRIMARY KEY, INTERIEUR BOOLEAN)");
		 rs = mystatement.executeQuery("CREATE TABLE MEDECINS(NUMERO INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1)PRIMARY KEY, NOM VARCHAR(20), DERNIEREGARDE DATE, NBGARDES INTEGER, NBLUNDI INTEGER, NBMARDI INTEGER, NBMERCREDI INTEGER, NBJEUDI  INTEGER, NBVENDREDI INTEGER, NBSAMEDI INTEGER, NBDIMANCHE INTEGER, SERVICE INTEGER,NBSEMESTRES INTEGER, NBFERIES INTEGER, FOREIGN KEY (SERVICE) REFERENCES SERVICES(NUMERO))");
		 rs = mystatement.executeQuery("CREATE TABLE IMPOSSIBILITES(DATEDEBUT DATE, DATEFIN DATE, NUMERO INTEGER, FOREIGN KEY (NUMERO) REFERENCES MEDECINS (NUMERO))");
		 rs = mystatement.executeQuery("CREATE TABLE JOURS_FERIES(JOUR DATE, NUMERO INTEGER, INTERIEUR BOOLEAN, FOREIGN KEY (NUMERO) REFERENCES MEDECINS(NUMERO),CONSTRAINT ENTRY_DD primary key (JOUR, INTERIEUR))");
		 if (!hasint){
			 rs = mystatement.executeQuery("CREATE TABLE GARDES(JOUR VARCHAR(20) primary key,URGENCES INTEGER, FOREIGN KEY (URGENCES) REFERENCES MEDECINS(NUMERO))");
		 }
		 else {
			 rs = mystatement.executeQuery("CREATE TABLE GARDES(JOUR VARCHAR(20) PRIMARY KEY,URGENCES INTEGER,INTERIEUR INTEGER, FOREIGN KEY (URGENCES) REFERENCES MEDECINS(NUMERO), FOREIGN KEY (interieur) REFERENCES MEDECINS(NUMERO))");
		 }
	}



 public static void filltables(Connection c, Workbook data) throws SQLException {
	 Statement mystatement = c.createStatement();
	 Statement ms2 = c.createStatement();
	 ResultSet rs;
	 ResultSet rs2;
	 Sheet sheet = data.getSheet(4);
	for (int i = 1; i < sheet.getRows();i++){
		if(sheet.getCell(i,3).getCellFormat() != null){
			rs = mystatement.executeQuery("INSERT INTO SERVICES(NOM, INTERIEUR) VALUES(".concat(sheet.getCell(i,3).getContents()).concat(",TRUE)"));
		}
		else{
			rs = mystatement.executeQuery("INSERT INTO SERVICES(NOM, INTERIEUR) VALUES(".concat(sheet.getCell(i,3).getContents()).concat(",FALSE)"));
		}
	}
	
	sheet = data.getSheet(0);
	int nservice;
	for (int i = 1; i < sheet.getRows();i++) {
		rs2 = ms2.executeQuery("SELECT NUMERO FROM SERVICES WHERE NOM = '".concat(sheet.getCell(2,i).getContents()).concat("'"));
		nservice = rs2.getInt("NUMERO");
		rs = mystatement.executeQuery("INSERT INTO MEDECINS(NOM,NBSEMESTRES,SERVICE) VALUES(".concat(sheet.getCell(0,i).getContents()).concat(",").concat(sheet.getCell(1,i).getContents()).concat(Integer.toString(nservice)).concat(")"));
	}
	
	sheet = data.getSheet(2);
	for (int i = 1; i < sheet.getRows();i++){
		rs2 = ms2.executeQuery("SELECT NUMERO FROM MEDECINS WHERE NOM = '".concat(sheet.getCell(2,i).getContents()).concat("'"));
		int nmedecin = rs2.getInt("NUMERO");
		rs = mystatement.executeQuery("INSERT INTO IMPOSIBILITES(DATEDEBUT,DATEFIN,NUMERO) VALUES(".concat(sheet.getCell(0,i).getContents()).concat(",").concat(sheet.getCell(1,i).getContents().concat(Integer.toString(nmedecin)).concat(")")));
	}
	
	sheet = data.getSheet(1);
	
 }
 
